"""Use Case: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å–Ω–∏–º–∫–æ–≤ –º–∞–≥–∞–∑–∏–Ω–∞"""
from typing import List, Set
from app.domain.entities import ItemChange, ChangeType
from app.infrastructure.db.repositories import SnapshotRepository, ShopItemRepository
from sqlalchemy.orm import Session


class CalculateDiffUseCase:
    """
    –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–≤—É—Ö —Å–Ω–∏–º–∫–æ–≤ –º–∞–≥–∞–∑–∏–Ω–∞
    
    –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç:
    - –î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
    - –£–¥–∞–ª—ë–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
    - –ò–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω
    - –ò–∑–º–µ–Ω–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–∞
    """
    
    def __init__(
        self,
        snapshot_repo: SnapshotRepository,
        item_repo: ShopItemRepository,
        session: Session,
    ):
        self.snapshot_repo = snapshot_repo
        self.item_repo = item_repo
        self.session = session
    
    def execute(self, prev_snapshot_id: int, curr_snapshot_id: int) -> List[ItemChange]:
        """
        –°—Ä–∞–≤–Ω–∏—Ç—å —Å–Ω–∏–º–∫–∏
        
        Args:
            prev_snapshot_id: ID –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–Ω–∏–º–∫–∞
            curr_snapshot_id: ID —Ç–µ–∫—É—â–µ–≥–æ —Å–Ω–∏–º–∫–∞
        
        Returns:
            –°–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        """
        print(f"üîç –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å–Ω–∏–º–∫–æ–≤ {prev_snapshot_id} ‚Üí {curr_snapshot_id}...")
        
        # –ü–æ–ª—É—á–∏—Ç—å ID —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞–∂–¥–æ–º —Å–Ω–∏–º–∫–µ
        prev_ids = set(self.snapshot_repo.get_item_ids(prev_snapshot_id))
        curr_ids = set(self.snapshot_repo.get_item_ids(curr_snapshot_id))
        
        changes: List[ItemChange] = []
        
        # 1. –î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
        added_ids = curr_ids - prev_ids
        for item_id in added_ids:
            item = self.item_repo.get_by_id(item_id)
            changes.append(ItemChange(
                item_id=item_id,
                snapshot_id=curr_snapshot_id,
                change_type=ChangeType.ADDED,
                new_price=item.price if item else None,
                new_quality=item.current_quality if item else None,
            ))
        
        # 2. –£–¥–∞–ª—ë–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
        removed_ids = prev_ids - curr_ids
        for item_id in removed_ids:
            item = self.item_repo.get_by_id(item_id)
            changes.append(ItemChange(
                item_id=item_id,
                snapshot_id=curr_snapshot_id,
                change_type=ChangeType.REMOVED,
                old_price=item.price if item else None,
                old_quality=item.current_quality if item else None,
            ))
        
        # 3. –û–±—â–∏–µ —Ç–æ–≤–∞—Ä—ã (–ø—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
        common_ids = prev_ids & curr_ids
        
        for item_id in common_ids:
            # –ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞ –∏–∑ –æ–±–æ–∏—Ö —Å–Ω–∏–º–∫–æ–≤
            # –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω—É–∂–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å snapshot_items —Å –∞—Ç—Ä–∏–±—É—Ç–∞–º–∏
            # –°–µ–π—á–∞—Å —É–ø—Ä–æ—â–µ–Ω–∏–µ - –±–µ—Ä—ë–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            item = self.item_repo.get_by_id(item_id)
            if not item:
                continue
            
            # –ó–¥–µ—Å—å –Ω—É–∂–Ω–∞ –ª–æ–≥–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ä—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
            # –î–ª—è MVP —É–ø—Ä–æ—â–µ–Ω–∏–µ: —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å —Ç–µ–∫—É—â–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
            # TODO: –î–æ–±–∞–≤–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –∞—Ç—Ä–∏–±—É—Ç–æ–≤
            
            # –ü—Ä–∏–º–µ—Ä: –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã (–µ—Å–ª–∏ –±—ã —Ö—Ä–∞–Ω–∏–ª–∏ –∏—Å—Ç–æ—Ä–∏—é)
            # if old_price != new_price:
            #     changes.append(ItemChange(...))
        
        print(f"  ‚úì –î–æ–±–∞–≤–ª–µ–Ω–æ: {len(added_ids)}")
        print(f"  ‚úì –£–¥–∞–ª–µ–Ω–æ: {len(removed_ids)}")
        print(f"  ‚úì –ë–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π: {len(common_ids)}")
        
        return changes


