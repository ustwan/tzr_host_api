"""API 5 - Shop Parser: Main application
Last updated: 2025-10-11 11:30 - Fixed bot key validation
"""
from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
import uvicorn

from app.config import config
from app.interfaces.http.routes import router


# –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (–Ω–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–ø—É—Å–∫ API –µ—Å–ª–∏ –Ω–µ—Ç –∫–ª—é—á–µ–π –±–æ—Ç–æ–≤)
try:
    config.validate()
except Exception as e:
    print(f"‚ö†Ô∏è  Configuration warning: {e}")
    print(f"‚ö†Ô∏è  API will start in read-only mode (workers won't be able to connect)")


# –°–æ–∑–¥–∞–Ω–∏–µ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app = FastAPI(
    title="API 5 - Shop Parser",
    description="""
    # API –ø–∞—Ä—Å–∏–Ω–≥–∞ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∏–≥—Ä–æ–≤—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤
    
    ## –ú–∞–≥–∞–∑–∏–Ω—ã
    - **Moscow** (–ú–æ—Å–∫–≤–∞)
    - **Oasis** (–û–∞–∑–∏—Å)  
    - **Neva** (–ù–µ–≤–∞)
    
    ## –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
    - üì¶ –ü–∞—Ä—Å–∏–Ω–≥ 27 –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ç–æ–≤–∞—Ä–æ–≤
    - üì∏ –°–Ω–∏–º–∫–∏ –º–∞–≥–∞–∑–∏–Ω–æ–≤ (–∫–∞–∂–¥—ã–π —á–∞—Å)
    - üîç –ü–æ–∏—Å–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –∏ –ø—Ä–æ–¥–∞–≤—Ü–∞–º
    - üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–¥–∞–≤—Ü–æ–≤
    - ü§ñ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –±–æ—Ç–æ–≤-–ø–∞—Ä—Å–µ—Ä–æ–≤
    
    ## –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç—É –∂–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —á—Ç–æ XML Workers (–±–æ—Ç—ã Sova)
    """,
    version="1.0.0",
    docs_url="/docs",
    redoc_url="/redoc",
    openapi_tags=[
        {"name": "Health", "description": "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏"},
        {"name": "Items", "description": "üì¶ –†–∞–±–æ—Ç–∞ —Å —Ç–æ–≤–∞—Ä–∞–º–∏"},
        {"name": "Categories", "description": "üóÇÔ∏è –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–∞–≥–∞–∑–∏–Ω–∞"},
        {"name": "Sellers", "description": "üë§ –ü–æ–∏—Å–∫ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–¥–∞–≤—Ü–æ–≤"},
        {"name": "Snapshots", "description": "üì∏ –°–Ω–∏–º–∫–∏ –º–∞–≥–∞–∑–∏–Ω–æ–≤"},
        {"name": "Analytics", "description": "üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —ç–∫–æ–Ω–æ–º–∏–∫–∏ –∏ —Ä—ã–Ω–∫–∞"},
        {"name": "Admin", "description": "üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ"},
    ]
)

# CORS middleware (–≤–∞–∂–Ω–æ –¥–ª—è Swagger UI)
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ —É–∫–∞–∑–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–æ–º–µ–Ω—ã
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
    expose_headers=["*"],
)

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–æ–≤
app.include_router(router)


@app.on_event("startup")
async def startup_event():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ"""
    print("=" * 60)
    print("üöÄ API 5 - Shop Parser")
    print(f"   Mode: {config.DB_MODE}")
    print(f"   Game Server: {config.GAME_SERVER_HOST}:{config.GAME_SERVER_PORT}")
    print(f"   Snapshot Interval: {config.SNAPSHOT_INTERVAL}s")
    
    bots = config.get_bots_config()
    enabled_bots = [code for code, bot in bots.items() if bot.enabled]
    print(f"   Bots enabled: {', '.join(enabled_bots)}")
    print("=" * 60)


@app.on_event("shutdown")
async def shutdown_event():
    """–û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ"""
    from app.infrastructure.db.database import db
    db.close()
    print("‚úì API 5 stopped")


if __name__ == "__main__":
    uvicorn.run(
        "app.main:app",
        host="0.0.0.0",
        port=8085,
        reload=False,
        log_level="info"
    )


