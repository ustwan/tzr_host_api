services:
  api_father:
    build:
      context: .
      dockerfile: ./api_father/Dockerfile
    depends_on: []
    restart: unless-stopped
    networks: [ apinet, backnet, dbnet ]
    environment:
      - TZ=${TZ}
      - REDIS_URL=${REDIS_URL}
      - QUEUE_REQUESTS=${QUEUE_REQUESTS}
      - QUEUE_EVENTS=${QUEUE_EVENTS}
      - DB_MODE=${DB_MODE}
      - DB_TEST_HOST=${DB_TEST_HOST}
      - DB_TEST_PORT=${DB_TEST_PORT}
      - DB_TEST_NAME=${DB_TEST_NAME}
      - DB_TEST_USER=${DB_TEST_USER}
      - DB_TEST_PASSWORD=${DB_TEST_PASSWORD}
      - DB_PROD_HOST=${DB_PROD_HOST}
      - DB_PROD_PORT=${DB_PROD_PORT}
      - DB_PROD_NAME=${DB_PROD_NAME}
      - DB_PROD_USER=${DB_PROD_USER}
      - DB_PROD_PASSWORD=${DB_PROD_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:9000/internal/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  apinet:
    external: true
    name: HOST_API_SERVICE_apinet
  backnet:
    external: true
    name: HOST_API_SERVICE_backnet
  dbnet:
    external: true
    name: HOST_API_SERVICE_dbnet
