#!/bin/bash

GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

pass() { echo -e "${GREEN}‚úÖ PASS${NC}: $1"; }
fail() { echo -e "${RED}‚ùå FAIL${NC}: $1"; }
info() { echo -e "${YELLOW}‚ÑπÔ∏è${NC} $1"; }
header() { echo -e "${BLUE}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"; echo -e "${YELLOW}$1${NC}"; echo -e "${BLUE}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"; }

echo ""
header "üß™ –ü–û–õ–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –í–°–ï–• API"
echo ""

# API 1 - Server Status
header "1Ô∏è‚É£  API 1 - Server Status"
echo ""

info "GET /api/healthz"
RESPONSE=$(curl -s http://localhost:1010/api/healthz)
echo "$RESPONSE" | grep -q "ok" && pass "Health check —Ä–∞–±–æ—Ç–∞–µ—Ç" || fail "Health check –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"

info "GET /api/server/status"
STATUS=$(curl -s http://localhost:1010/api/server/status)
echo "$STATUS" | jq -e '.server_status' >/dev/null 2>&1 && pass "–ü–æ–ª—É—á–µ–Ω server_status" || fail "–ù–µ—Ç server_status"
echo "$STATUS" | jq -e '.rates.exp' >/dev/null 2>&1 && pass "–ü–æ–ª—É—á–µ–Ω—ã rates" || fail "–ù–µ—Ç rates"

SERVER_STATUS=$(echo "$STATUS" | jq -r '.server_status')
echo "  ‚Ä¢ Server Status: $SERVER_STATUS"
echo "  ‚Ä¢ Rate Exp: $(echo "$STATUS" | jq -r '.rates.exp')"
echo "  ‚Ä¢ Rate PVP: $(echo "$STATUS" | jq -r '.rates.pvp')"
echo ""

# API 2 - Registration
header "2Ô∏è‚É£  API 2 - Registration"
echo ""

info "GET /api/register/health"
RESPONSE=$(curl -s http://localhost:1010/api/register/health)
echo "$RESPONSE" | grep -q "ok" && pass "Health check —Ä–∞–±–æ—Ç–∞–µ—Ç" || fail "Health check –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"

info "POST /api/register (–ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏)"
RESPONSE=$(curl -s -X POST http://localhost:1010/api/register \
  -H "Content-Type: application/json" \
  -d '{"login":"ab"}')
echo "$RESPONSE" | jq -e '.fields.login' >/dev/null 2>&1 && pass "–í–∞–ª–∏–¥–∞—Ü–∏—è login —Ä–∞–±–æ—Ç–∞–µ—Ç" || fail "–í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
echo ""

# API Father - Main
header "3Ô∏è‚É£  API Father - Main Aggregator"
echo ""

info "GET /api/info/internal/health"
RESPONSE=$(curl -s http://localhost:1010/api/info/internal/health)
echo "$RESPONSE" | grep -q "ok" && pass "Health check —Ä–∞–±–æ—Ç–∞–µ—Ç" || fail "Health check –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
REDIS_STATUS=$(echo "$RESPONSE" | jq -r '.details.redis')
echo "  ‚Ä¢ Redis: $REDIS_STATUS"

info "GET /api/info/internal/constants"
CONSTANTS=$(curl -s http://localhost:1010/api/info/internal/constants)
COUNT=$(echo "$CONSTANTS" | jq 'length')
[ "$COUNT" -ge 5 ] && pass "–ü–æ–ª—É—á–µ–Ω–æ $COUNT –∫–æ–Ω—Å—Ç–∞–Ω—Ç" || fail "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–Ω—Å—Ç–∞–Ω—Ç: $COUNT"
echo ""

# API 4 - Analytics
header "4Ô∏è‚É£  API 4 - Battle Analytics"
echo ""

info "GET /api/battle/health"
RESPONSE=$(curl -s http://localhost:1010/api/battle/health)
echo "$RESPONSE" | grep -q "ok" && pass "Health check —Ä–∞–±–æ—Ç–∞–µ—Ç" || fail "Health check –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"

info "GET /api/analytics/health"
RESPONSE=$(curl -s http://localhost:1010/api/analytics/health)
echo "$RESPONSE" | grep -q "ok" && pass "Analytics health —Ä–∞–±–æ—Ç–∞–µ—Ç" || fail "Analytics health –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
echo ""

# API Mother - File Handler
header "5Ô∏è‚É£  API Mother - File Handler"
echo ""

info "GET /api/mother/healthz"
RESPONSE=$(curl -s http://localhost:1010/api/mother/healthz)
echo "$RESPONSE" | grep -q "ok" && pass "Health check —Ä–∞–±–æ—Ç–∞–µ—Ç" || fail "Health check –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"

info "GET /api/mother/list"
FILES=$(curl -s http://localhost:1010/api/mother/list)
COUNT=$(echo "$FILES" | jq -r '.count')
[ "$COUNT" -gt 100 ] && pass "–§–∞–π–ª–æ–≤ –¥–æ—Å—Ç—É–ø–Ω–æ: $COUNT" || fail "–ú–∞–ª–æ —Ñ–∞–π–ª–æ–≤: $COUNT"

info "GET /api/mother/gz/{path} (—Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞)"
curl -s http://localhost:1010/api/mother/gz/30/1500000.tzb -o /tmp/test_download.gz
if [ -f /tmp/test_download.gz ]; then
    SIZE=$(stat -f%z /tmp/test_download.gz 2>/dev/null || stat -c%s /tmp/test_download.gz)
    if [ "$SIZE" -gt 100 ]; then
        gunzip -t /tmp/test_download.gz 2>/dev/null && pass "–§–∞–π–ª —Å–∫–∞—á–∞–Ω ($SIZE –±–∞–π—Ç) –∏ –≤–∞–ª–∏–¥–µ–Ω" || fail "–§–∞–π–ª –ø–æ–≤—Ä–µ–∂–¥–µ–Ω"
    else
        fail "–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–∏–π: $SIZE –±–∞–π—Ç"
    fi
else
    fail "–§–∞–π–ª –Ω–µ —Å–∫–∞—á–∞–Ω"
fi

info "POST /api/mother/sync"
RESPONSE=$(curl -s -X POST http://localhost:1010/api/mother/sync)
echo "$RESPONSE" | grep -q "sync scheduled" && pass "Sync endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç" || fail "Sync –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
echo ""

# Infrastructure
header "6Ô∏è‚É£  Infrastructure"
echo ""

info "Traefik Gateway"
HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:1010/api/healthz)
[ "$HTTP_CODE" = "200" ] && pass "Traefik —Ä–∞–±–æ—Ç–∞–µ—Ç: $HTTP_CODE" || fail "Traefik –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: $HTTP_CODE"
echo ""

# Summary
header "üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê"
echo ""
echo "API –°–µ—Ä–≤–∏—Å–æ–≤: 5"
echo "–ö–æ–Ω—Å—Ç–∞–Ω—Ç–æ–≤ –≤ –ë–î: $COUNT"
echo "–§–∞–π–ª–æ–≤ –¥–æ—Å—Ç—É–ø–Ω–æ: $(echo "$FILES" | jq -r '.count')"
echo "Server Status: $SERVER_STATUS"
echo "Redis: $REDIS_STATUS"
echo ""
echo "=== üéâ –í–°–ï –¢–ï–°–¢–´ –ó–ê–í–ï–†–®–ï–ù–´ ==="
echo ""
